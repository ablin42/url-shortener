{"version":3,"sources":["App.tsx","index.tsx"],"names":["Toggler","useState","isDarkMode","state","setState","useEffect","darkThemeSelected","localStorage","getItem","checkbox","document","querySelector","checked","documentElement","setAttribute","removeAttribute","transitionTheme","classList","add","window","setTimeout","remove","className","onChange","setItem","removeItem","type","id","name","htmlFor","ShortenForm","value","errorMsg","checkErrors","errMsg","trim","validUrl","isWebUri","method","action","onSubmit","e","preventDefault","axios","post","longUrl","then","response","location","href","data","urlCode","console","log","catch","error","target","btn","length","style","opacity","transform","placeholder","required","HomeBtn","aria-hidden","NotFound","Shortened","shortUrl","handleClipboard","tooltip","contains","tempInput","createElement","body","appendChild","select","execCommand","removeChild","copyClipboard","data-clipboard","onClick","rel","FetchShortened","_id","date","createdAt","updatedAt","__v","useParams","a","url","get","axiosTest","ShortenRoute","match","useRouteMatch","exact","path","to","App","component","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3aa6e451.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  useParams,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport validUrl from \"valid-url\";\r\nimport axios from \"axios\";\r\n\r\nfunction Toggler() {\r\n  const [state, setState] = useState({ isDarkMode: false });\r\n\r\n  useEffect(() => {\r\n    let darkThemeSelected =\r\n      localStorage.getItem(\"themeSwitch\") !== null &&\r\n      localStorage.getItem(\"themeSwitch\") === \"dark\";\r\n    let checkbox = document.querySelector(\r\n      \"input[name=theme]\"\r\n    ) as HTMLInputElement;\r\n    if (checkbox) checkbox.checked = darkThemeSelected;\r\n\r\n    darkThemeSelected\r\n      ? document.documentElement.setAttribute(\"data-theme\", \"dark\")\r\n      : document.documentElement.removeAttribute(\"data-theme\");\r\n  });\r\n\r\n  let transitionTheme = () => {\r\n    document.documentElement.classList.add(\"transition\");\r\n    window.setTimeout(() => {\r\n      document.documentElement.classList.remove(\"transition\");\r\n    }, 750);\r\n  };\r\n\r\n  function handleToggler() {\r\n    setState({ isDarkMode: !state.isDarkMode });\r\n\r\n    if (state.isDarkMode) {\r\n      transitionTheme();\r\n      localStorage.setItem(\"themeSwitch\", \"dark\");\r\n      document.documentElement.setAttribute(\"data-theme\", \"dark\");\r\n    } else {\r\n      transitionTheme();\r\n      localStorage.removeItem(\"themeSwitch\");\r\n      document.documentElement.setAttribute(\"data-theme\", \"light\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"toggle-container\">\r\n      <input\r\n        onChange={handleToggler}\r\n        type=\"checkbox\"\r\n        id=\"toggler\"\r\n        name=\"theme\"\r\n      />\r\n      <label htmlFor=\"toggler\">Toggle</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ShortenForm() {\r\n  const [state, setState] = useState({ value: \"\", errorMsg: \"\" });\r\n\r\n  function checkErrors() {\r\n    let errMsg = \"\";\r\n    let value = state.value.trim();\r\n\r\n    // PROPER URL VALIDATION HERE\r\n    if (!validUrl.isWebUri(value)) errMsg = \"URL not properly formatted\";\r\n\r\n    return errMsg;\r\n  }\r\n\r\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\r\n    //can handle input validation here too\r\n\r\n    let value = e.target.value;\r\n    let btn = document.querySelector(\".search-btn\") as HTMLInputElement;\r\n\r\n    if (value.length > 0 && btn) {\r\n      btn.style.opacity = \"1\";\r\n      btn.style.transform = \"rotate(0deg)\";\r\n    } else {\r\n      btn.style.opacity = \"0\";\r\n      btn.style.transform = \"rotate(45deg)\";\r\n    }\r\n\r\n    setState({ value: e.target.value, errorMsg: checkErrors() });\r\n  }\r\n\r\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    let value = state.value;\r\n\r\n    axios\r\n      .post(\"/api/url/shorten\", {\r\n        longUrl: value,\r\n      })\r\n      .then(function (response) {\r\n        window.location.href = \"/link/\" + response.data.urlCode;\r\n        //redirect to link and pass data\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"hero-text\">\r\n        <h1 className=\"heroAnim\">Dead simple URL shortener</h1>\r\n        <h2 className=\"heroAnim\">Copy and paste your link below</h2>\r\n      </div>\r\n\r\n      <h1>{state.errorMsg}</h1>\r\n      <div className=\"form-wrapper\">\r\n        <form\r\n          method=\"POST\"\r\n          action=\"/\"\r\n          onSubmit={handleSubmit}\r\n          className=\"shorten-form\"\r\n        >\r\n          <input\r\n            onChange={handleInput}\r\n            name=\"longUrl\"\r\n            type=\"text\"\r\n            className=\"search-txt\"\r\n            placeholder=\"Your link here...\"\r\n            value={state.value}\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"search-btn\">\r\n            <i className=\"fas fa-arrow fa-arrow-right\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction HomeBtn() {\r\n  return (\r\n    <form action=\"/\">\r\n      <button className=\"btn-404\">\r\n        <i className=\"fas fa-home fa-2x\" aria-hidden=\"true\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <>\r\n      <h1 className=\"not-found\">404</h1>\r\n      <HomeBtn></HomeBtn>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface UrlType {\r\n  id: string;\r\n}\r\n\r\ninterface UrlObject {\r\n  _id: string;\r\n  longUrl: string;\r\n  shortUrl: string;\r\n  urlCode: string;\r\n  date: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v: number;\r\n}\r\n\r\ntype CardProps = {\r\n  id: string;\r\n  longUrl: string;\r\n  shortUrl: string;\r\n};\r\n\r\nfunction Shortened({ id, longUrl, shortUrl }: CardProps) {\r\n  function handleClipboard(e: React.MouseEvent<HTMLElement>) {\r\n    e.preventDefault();\r\n    let toCopy = document.querySelector(\"#clipper\") as HTMLInputElement;\r\n    let value = toCopy.value;\r\n    let tooltip = document.querySelector(\".tooltiptext\");\r\n\r\n    if (tooltip && !tooltip.classList.contains(\"tooltip-visible\")) {\r\n      tooltip.classList.add(\"tooltipAnim\");\r\n      tooltip.classList.add(\"tooltip-visible\");\r\n      setTimeout(() => {\r\n        if (tooltip) {\r\n          tooltip.classList.remove(\"tooltip-visible\");\r\n          tooltip.classList.remove(\"tooltipAnim\");\r\n        }\r\n      }, 1000);\r\n    }\r\n\r\n    copyClipboard(value);\r\n  }\r\n\r\n  function copyClipboard(value: string) {\r\n    let tempInput = document.createElement(\"input\");\r\n    tempInput.value = value;\r\n\r\n    document.body.appendChild(tempInput);\r\n    tempInput.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(tempInput);\r\n  }\r\n\r\n  return (\r\n    <div className=\"url-container\">\r\n      <div className=\"clipboard-wrapper\">\r\n        <div className=\"tooltip\">\r\n          <h2 data-clipboard=\"\" onClick={handleClipboard}>\r\n            Copy to clipboard\r\n          </h2>\r\n          <a data-clipboard=\"\" onClick={handleClipboard} href=\"./#\">\r\n            <i className=\"fas fa-copy\"></i>\r\n          </a>\r\n\r\n          <span className=\"tooltiptext\">Copied!</span>\r\n        </div>\r\n      </div>\r\n      <a\r\n        target=\"_blank\"\r\n        href={longUrl}\r\n        rel=\"noopener noreferrer\"\r\n        className=\"shortened-link heroAnim\"\r\n      >\r\n        xs-url.fr/{id}\r\n      </a>\r\n      <input type=\"hidden\" value={\"http://\" + shortUrl} id=\"clipper\" />\r\n\r\n      <HomeBtn></HomeBtn>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FetchShortened() {\r\n  const [state, setState] = useState<UrlObject>({\r\n    _id: \"\",\r\n    longUrl: \"\",\r\n    shortUrl: \"\",\r\n    urlCode: \"\",\r\n    date: \"\",\r\n    createdAt: \"\",\r\n    updatedAt: \"\",\r\n    __v: 0,\r\n  });\r\n  let { id } = useParams<UrlType>();\r\n\r\n  useEffect(() => {\r\n    async function axiosTest() {\r\n      try {\r\n        let url = \"/api/url/\" + id;\r\n        const response = await axios.get(url);\r\n\r\n        setState(response.data);\r\n      } catch (err) {\r\n        window.location.href = \"/\";\r\n      }\r\n    }\r\n    axiosTest();\r\n  }, [id]);\r\n\r\n  return state._id.length ? (\r\n    <Shortened\r\n      id={state._id}\r\n      longUrl={state.longUrl}\r\n      shortUrl={state.shortUrl}\r\n    />\r\n  ) : (\r\n    <div className=\"hero-text\">\r\n      <h1 className=\"\">Loading...</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ShortenRoute() {\r\n  let match = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${match.url}/:id`}>\r\n        <FetchShortened></FetchShortened>\r\n      </Route>\r\n      <Route path={match.path}>\r\n        <Redirect to=\"/\" />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n// function RedirectTo() {\r\n//   const [state, setState] = useState<UrlObject>({\r\n//     _id: \"\",\r\n//     longUrl: \"\",\r\n//     shortUrl: \"\",\r\n//     urlCode: \"\",\r\n//     date: \"\",\r\n//     createdAt: \"\",\r\n//     updatedAt: \"\",\r\n//     __v: 0,\r\n//   });\r\n//   let { id } = useParams<UrlType>();\r\n\r\n//   useEffect(() => {\r\n//     async function axiosTest() {\r\n//       try {\r\n//         let url = \"/api/url/\" + id;\r\n//         const response = await axios.get(url);\r\n\r\n//         setState(response.data);\r\n//       } catch (err) {\r\n//         window.location.href = \"/\";\r\n//       }\r\n//     }\r\n//     axiosTest();\r\n//   }, [id]);\r\n\r\n//   let Url = \"/api/url/\" + state._id;\r\n\r\n//   return state._id.length ? (\r\n//     <Route path=\"/\">\r\n//       <Redirect to={Url} />\r\n//     </Route>\r\n//   ) : (\r\n//     <div className=\"hero-text\">\r\n//       <h1 className=\"\">Redirecting...</h1>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function RedirectRoute() {\r\n//   let match = useRouteMatch();\r\n\r\n//   return (\r\n//     <Switch>\r\n//       <Route exact path={`${match.url}/:id`}>\r\n//         <RedirectTo></RedirectTo>\r\n//       </Route>\r\n//       <Route path={match.path}>\r\n//         <Redirect to=\"/\" />\r\n//       </Route>\r\n//     </Switch>\r\n//   );\r\n// }\r\n\r\n//  <Route path=\"/:id\">\r\n//    <RedirectRoute></RedirectRoute>\r\n//  </Route>;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Toggler></Toggler>\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route path=\"/link/\">\r\n              <ShortenRoute></ShortenRoute>\r\n            </Route>\r\n\r\n            <Route exact path=\"/\">\r\n              <ShortenForm></ShortenForm>\r\n            </Route>\r\n\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n\r\n        <footer className=\"invert\">\r\n          <p className=\"footer-text\">\r\n            <a\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://www.ablin.dev\"\r\n            >\r\n              @ablin42\r\n            </a>\r\n          </p>\r\n        </footer>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n\tconst [state, setState] = useState<UrlObject>({\r\n\t\tid: \"\",\r\n\t\tlongUrl: \"\",\r\n\t\tshortUrl: \"\",\r\n\t\turlCode: \"\",\r\n\t\tdate: \"\",\r\n\t\tcreatedAt: \"\",\r\n\t\tupdatedAt: \"\",\r\n\t\t__v: 0\r\n\t});\r\n\tlet { id } = useParams<UrlType>();\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function axiosTest() {\r\n\t\t\ttry {\r\n\t\t\t\tlet url = \"/api/url/\" + id;\r\n\t\t\t\tconst response = await axios.get(url);\r\n\r\n\t\t\t\tsetState(response.data);\r\n\t\t\t} catch (err) {\r\n\t\t\t\t//window.location.href = \"/\";\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\taxiosTest();\r\n\t}, [id]);*/\r\n\r\n/*\r\nconst PageDisplayed: React.FC<pageProp> = (prop) => {\r\n  const [state, setState] = useState({\r\n    heroValues: [\"Dead simple URL shortener\", \"Copy and paste your link below\"],\r\n    isUrl: prop.isUrl,\r\n  });\r\n\r\n  function handlePage() {\r\n    if (state.isUrl) {\r\n      setState({\r\n        heroValues: [\"Copy to clipboard\", \"http://url\"], //\r\n        isUrl: !state.isUrl,\r\n      });\r\n      return (\r\n        <form action=\"/\">\r\n          <button className=\"btn-404\">\r\n            <i className=\"fas fa-home fa-2x\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </form>\r\n      );\r\n    }\r\n    return (\r\n      <Route exact path=\"/\">\r\n        <ShortenForm></ShortenForm>\r\n      </Route>\r\n    );\r\n  }\r\n  let result = handlePage();\r\n\r\n  console.log(result);\r\n  return (\r\n    <div className=\"container\">\r\n      <HeroText heroValues={state.heroValues}></HeroText>\r\n      <div className=\"form-wrapper\">{result}</div>\r\n    </div>\r\n  );\r\n};*/\r\n//<PageDisplayed isUrl={true}></PageDisplayed>\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n//import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}